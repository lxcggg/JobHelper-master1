<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mapper.JobMapper" >
    <resultMap id="BaseResultMap" type="com.entity.Job" >
        <id column="job_id" property="jobId" jdbcType="INTEGER" />
        <result column="job_name" property="jobName" jdbcType="VARCHAR" />
        <result column="job_salary" property="jobSalary" jdbcType="VARCHAR" />
        <result column="job_category" property="jobCategory" jdbcType="VARCHAR" />
        <result column="job_describe" property="jobDescribe" jdbcType="VARCHAR" />
        <result column="job_company" property="jobCompany" jdbcType="VARCHAR" />
        <result column="job_need" property="jobNeed" jdbcType="VARCHAR" />
        <result column="job_quality" property="jobQuality" jdbcType="VARCHAR" />
        <result column="job_date" property="jobDate" jdbcType="DATE" />
        <result column="job_address" property="jobAddress" jdbcType="VARCHAR" />
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from jh_job
        where job_id = #{jobId,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.entity.Job" >
        insert into jh_job (job_id, job_name, job_salary,
                            job_category, job_describe, job_company,
                            job_need, job_quality, job_date,
                            job_address)
        values (#{jobId,jdbcType=INTEGER}, #{jobName,jdbcType=VARCHAR}, #{jobSalary,jdbcType=VARCHAR},
                #{jobCategory,jdbcType=VARCHAR}, #{jobDescribe,jdbcType=VARCHAR}, #{jobCompany,jdbcType=VARCHAR},
                #{jobNeed,jdbcType=VARCHAR}, #{jobQuality,jdbcType=VARCHAR}, #{jobDate,jdbcType=DATE},
                #{jobAddress,jdbcType=VARCHAR})
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.entity.Job" >
        update jh_job
        set job_name = #{jobName,jdbcType=VARCHAR},
            job_salary = #{jobSalary,jdbcType=VARCHAR},
            job_category = #{jobCategory,jdbcType=VARCHAR},
            job_describe = #{jobDescribe,jdbcType=VARCHAR},
            job_company = #{jobCompany,jdbcType=VARCHAR},
            job_need = #{jobNeed,jdbcType=VARCHAR},
            job_quality = #{jobQuality,jdbcType=VARCHAR},
            job_date = #{jobDate,jdbcType=DATE},
            job_address = #{jobAddress,jdbcType=VARCHAR}
        where job_id = #{jobId,jdbcType=INTEGER}
    </update>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select job_id, job_name, job_salary, job_category, job_describe, job_company, job_need,
               job_quality, job_date, job_address
        from jh_job
        where job_id = #{jobId,jdbcType=INTEGER}
    </select>
    <select id="selectAll" resultMap="BaseResultMap" >
        select job_id, job_name, job_salary, job_category, job_describe, job_company, job_need,
               job_quality, job_date, job_address
        from jh_job
    </select>
    <select id="selectSome" resultMap="BaseResultMap" >
        select job_id, job_name, job_salary, job_category, job_describe, job_company, job_need,
               job_quality, job_date, job_address
        from jh_job
        LIMIT 3
    </select>
    <delete id="batchDelete" parameterType="list">
        DELETE from jh_job
        <foreach collection="ids" item="jobId" separator="," open="where job_id in(" close=")">
            #{jobId}
        </foreach>
    </delete>
    <select id="getByCategory" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT * FROM jh_job WHERE job_category = #{jobCategory}
    </select>

    <select id="getByJobCategoryAll" parameterType="java.lang.String" resultMap="BaseResultMap">
    SELECT * FROM jh_job
  </select>
    <select id="getJobCount" resultType="int">
        SELECT COUNT(*) AS record FROM jh_job;
    </select>

</mapper>